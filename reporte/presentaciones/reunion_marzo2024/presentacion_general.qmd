---
title: "Proyecto FONDEF ID21|10297"
subtitle: "Reporte general de objetivos y avances principales"
author: "M. Abel Herrera"
format: 
  revealjs:
    theme: simple
    width: 2000
    height: 900
    margin: .1
editor: visual
execute:
  echo: false
  warning: false
  message: false
filters:
  - lightbox
lang: es
---

```{r}
source('C:/Hemera/garces/script/funciones/paquetes.R')
```

# Parámetros fisiológicos

## Fluorescencia

:::: {.columns}

::: {.column width="40%"}
Los datos de fluorescencia han sido recopilados mediante el uso de fluorómetro FluorPen, entre 13:00 y 14:00 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.

El índice utilizado es el Rendimiento Cuántico Máximo del Fotosistema II (ΦP0).
:::

::: {.column width="5%"}
:::

::: {.column width="55%"}
::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_fluo <- read_rds('C:/Hemera/garces/data/data_processed/fluorescencia.rds')

fluo_info <- data_fluo |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_fluo |> 
  ggplot(aes(unidad,Phi_Po, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = fluo_info, aes(unidad,1,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = expression(Phi[P0]),
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_fluo |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ fecha - years(1),
                           temporada == '2022-2023' ~ fecha)) |>
  ggplot(aes(fecha,Phi_Po,color=unidad)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-05-3"))) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
    labs(y = expression(Phi[P0]),
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```
:::
:::

::::

## Potencial Hídrico Xilemático

:::: {.columns}
::: {.column width="40%"}
Los datos de potencial hídrico xilemático han sido recopilados mediante el uso de una camara de presión o bomba Scholander, entre 13:00 y 14:00 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.
:::
::: {.column width="5%"}
:::
::: {.column width="55%"}
::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_potencial <- read_rds('C:/Hemera/garces/data/data_processed/potencial.rds') |>
  mutate(MPa = -potencial_bar/10)

potencial_info <- data_potencial |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_potencial |>
  ggplot(aes(unidad,MPa, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = potencial_info, aes(unidad,1,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = 'Potencial (MPa)',
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 12
#| fig-height: 7
#| lightbox: true

data_potencial |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ as.Date(fecha) - years(1),
                           temporada == '2022-2023' ~ as.Date(fecha))) |>
  ggplot(aes(fecha,MPa,color=unidad)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-03-3"))) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
    labs(y = 'Potencial (MPa)',
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```
:::
:::
::::

## Ciclo horario del potencial

:::: {.columns}
::: {.column width="40%"}
Estos valores se recopilaron cada una hora desde las 8 am hasta las 8 pm, mediante la misma metodología que la extracción del valor único diario pero con menor tiempo de oscuridad y sellado en las hojas (30 a 45 min).

A continuación se muestran los resultados de la caracterización del ciclo diario del potencial.
:::
::: {.column width="5%"}
:::
::: {.column width="55%"}
::: panel-tabset
# Temporada 2022-2023
```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_potencial <- read_rds('C:/Hemera/garces/data/data_processed/potencial_horario.rds') |> 
filter(temporada == '2022-2023')

data_potencial |>
  mutate(MPa = -bar/10,
         hora = as.numeric(substr(hora,1,2))) |>
  ggplot(aes(hora,MPa,color=unidad)) +
  geom_point() +
  geom_line() +
  facet_grid(sitio~tratamiento, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(7, 21), breaks = c(8, 12, 16, 20)) +
  labs(y = 'Potencial (MPa)',
       x = 'Hora',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))

```

# Temporada 2023-2024
```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_potencial <- read_rds('C:/Hemera/garces/data/data_processed/potencial_horario.rds') |> 
filter(temporada == '2023-2024')

data_potencial |>
  mutate(MPa = -bar/10,
         hora = as.numeric(substr(hora,1,2))) |>
  ggplot(aes(hora,MPa,color=unidad)) +
  geom_point() +
  geom_line() +
  facet_grid(sitio~tratamiento, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(7, 21), breaks = c(8, 12, 16, 20)) +
  labs(y = 'Potencial (MPa)',
       x = 'Hora',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))

```
:::
:::
::::

## LAI

:::: {.columns}
::: {.column width="40%"}
Los datos de LAI han sido recopilados mediante el uso de ceptometro LP80, entre 12:30 y 13:30 de forma semanal, en ambos sitios para la temporada 2022-2023 y 2023-2024.
:::
::: {.column width="5%"}
:::
::: {.column width="55%"}
::: panel-tabset
# Distribución

```{r}
#| fig-width: 10
#| fig-height: 5
#| lightbox: true

data_lai <- read_rds('C:/Hemera/garces/data/data_processed/ceptometro.rds') |>
  mutate(tratamiento = as.factor(tratamiento))

data_lai |>
  ggplot(aes(tratamiento,lai, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  facet_grid(~temporada+sitio, labeller = as_labeller(names)) +
  labs(y = 'LAI',
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal

```{r}
#| fig-width: 13
#| fig-height: 5
#| lightbox: true

data_lai |>
  mutate(fecha = case_when(temporada == '2023-2024' ~ fecha - years(1),
                           temporada == '2022-2023' ~ fecha)) |>
  ggplot(aes(fecha,lai,color=tratamiento)) +
  geom_point(size=1) +
  geom_line(linewidth = .5) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b",
               limits = as.Date(c("2022-10-01", "2023-03-3"))) +
  facet_grid(~temporada+sitio, labeller = as_labeller(names)) +
    labs(y = 'LAI',
       x = 'Meses',
       color = 'Unidad') +
  theme_light() +
  theme(text = element_text(size = 15),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```
:::
:::
::::

# Turgor: Presión de parche

## Distribución

:::: {.columns}
::: {.column width="40%"}
Los datos de turgor han sido recopilados mediante el uso de sensores ZIM, los cuales miden presión de parche en una determinada hoja cada media hora de forma continua. Estos fueron dispuestos en cada unidad de los tratamientos (dos sensores por unidad), en ambos sitios durante la temporada 2022-2023 y 2023-2024.
:::
::: {.column width="5%"}
:::
::: {.column width="55%"}

```{r}
#| fig-width: 10
#| fig-height: 7
#| lightbox: true

data_turgor <- read_rds('C:/Hemera/garces/data/data_processed/turgor.rds')

turgor_info <- data_turgor |>
  select(sitio,temporada,tratamiento,unidad,codigo) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_turgor |> 
  ggplot(aes(unidad,turgor, fill = sitio)) +
  geom_boxplot(alpha = .7) +
  geom_text(data = turgor_info, aes(unidad,350,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = expression("P"[p]*" (bar)"),
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 12),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```
:::
::::

## Serie temporal y ciclo diario

::: panel-tabset
# Serie 2022-2023

```{r}
#| fig-width: 13
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor |>
  filter(temporada == '2022-2023') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'), 
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor,color=zim)) +
  geom_point(size = .1) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
               limits = as.POSIXct(c("2022-10-01", "2023-04-3"))) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = expression("P"[p]*" (bar)"),
       color = 'Zim') +
  theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=4)))
```

# Serie 2023-2024

```{r}
#| fig-width: 13
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor |>
  filter(temporada == '2023-2024') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'), 
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor,color=zim)) +
  geom_point(size = .1) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
               limits = as.POSIXct(c("2023-10-01", "2024-04-3"))) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  labs(x = "Meses", y = expression("P"[p]*" (bar)"),
       color = 'Zim') +
  theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=4)))
```

# Ciclo horario 2022-2023

```{r}
#| fig-width: 13
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor |> 
  filter(temporada == '2022-2023') |>
  group_by(sensor) |>
  drop_na() |> 
  mutate(turgor_sc = scale(turgor)) |> 
  ungroup() |> 
  group_by(sitio,tratamiento,unidad,hora) |> 
  summarize(turgor_hora = mean(turgor_sc,na.rm = T)) |> 
  ungroup() |> 
  mutate(hora = as.numeric(substr(hora,1,2))) |> 
  ggplot(aes(hora,turgor_hora,color=unidad,group=unidad)) +
  geom_line() +
  labs(x = 'Hora',
       y = expression("P"[p]*" (std)")) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(0, 23), breaks = c(0, 6, 12, 18, 23)) +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=7)))
```

# Ciclo horario 2023-2024

```{r}
#| fig-width: 13
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor |> 
  filter(temporada == '2023-2024') |>
  group_by(sensor) |>
  drop_na() |> 
  mutate(turgor_sc = scale(turgor)) |> 
  ungroup() |> 
  group_by(sitio,tratamiento,unidad,hora) |> 
  summarize(turgor_hora = mean(turgor_sc,na.rm = T)) |> 
  ungroup() |> 
  mutate(hora = as.numeric(substr(hora,1,2))) |> 
  ggplot(aes(hora,turgor_hora,color=unidad,group=unidad)) +
  geom_line() +
  labs(x = 'Hora',
       y = expression("P"[p]*" (std)")) +
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +
  theme_light() +
  scale_x_continuous(limits = c(0, 23), breaks = c(0, 6, 12, 18, 23)) +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17))) +
  guides(colour = guide_legend(override.aes = list(size=7)))
```
:::

# Curvas Presión volumen y TLP

## Curvas P-V

:::: {.columns}

::: {.column width="50%"}
Los datos utilizados para las curvas Presión-volumen corresponden a mediciones de potencial hídrico xilemático y peso en hojas tomadas en laboratorio con cámara de presión Scholander y balanza analítica.

Según la metodología descrita por Halbritter et al. (2020), el punto de pérdida de turgor (TLP) se estima como el último punto de la curva del Ψ inverso en función del RWD (1 - RWC) antes de comenzar su fracción lineal, como se muestra en la siguiente figura.
:::

::: {.column width="50%"}
![Ejemplo de una curva presión-volumen. Los círculos llenos representan las primeras 5 mediciones iterativas: los círculos abiertos representan las últimas 6 mediciones. La porción lineal (línea sólida) muestra el potencial osmótico (Ψo), la porción curva (línea discontinua) es el potencial hídrico antes del punto de pérdida de turgencia (TLP), y el área sombreada es el potencial de turgencia (Ψp). Fuente: Halbritter et al. (2020).](figuras/misc/tlp.png)
:::
::::

## TLP

A continuación se presentan los puntos de pérdida de turgor de cada unidad, según tratamiento, sitio y temporada, a partir de las curvas presión-volumen.

```{r}
#| fig-width: 10
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_tlp <- read_rds('C:/Hemera/garces/data/data_processed/tlp.rds') |>
  mutate(tlp = -10*tlp)

tlp_info <- data_tlp |>
  select(-tlp) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)

data_tlp |>
  ggplot(aes(unidad,tlp, fill = sitio)) +
  geom_bar(stat = "identity", alpha = .7) +
  geom_text(data = tlp_info, aes(unidad,40,label = codigo),size=3) +
  facet_grid(temporada+sitio~tratamiento, labeller = as_labeller(names)) +
  labs(y = expression(paste("Potencial ", (kPa^-1))),
       x = 'Unidad') +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 14),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))

```

# Modelo de potencial

Los siguientes gráficos corresponden a las comparaciones entre los valores de potencial observados y el potencial modelado a través de una regresión lineal múltiple, utilizando los dos componentes principales de las variables climáticas (i.e. temperatura media, humedad relativa media y vpd medio).

```{r}
data_pca <- read_rds('C:/Hemera/garces/data/data_processed/clima_pca.rds')

data_pca_dia <- data_pca |> 
  filter(hora %in% c('13:00','14:00')) |> 
  group_by(sitio,temporada,fecha) |> 
  summarise(PC1 = mean(PC1,na.rm=T),
            PC2 = mean(PC2,na.rm=T)) |> 
  ungroup()
  
data_dia <- read_rds('C:/Hemera/garces/data/data_processed/turgor_potencial_dia.rds') |>
  select(sitio:codigo,potencial) |> 
  na.omit() |> 
  left_join(data_pca_dia,by=c('sitio','temporada','fecha')) |>
  mutate(hora = '13:00',
         tipo = 'dia',
         .before = tratamiento)
  
data_hora <- read_rds('C:/Hemera/garces/data/data_processed/turgor_potencial_hora.rds') |>
  select(sitio:codigo,potencial) |> 
  na.omit() |> 
  left_join(data_pca,by=c('sitio','temporada','fecha','hora')) |> 
  mutate(tipo = 'hora',
         .before = tratamiento)

data_modelo <- data_dia |> 
  sample_frac(0.8, replace = FALSE) |> 
  bind_rows(data_hora |> 
              sample_frac(0.8, replace = FALSE))

data_validacion <- bind_rows(data_dia,data_hora) |> 
  anti_join(data_modelo)

data_coef <- data_modelo |> 
  select(sitio,temporada,potencial,PC1,PC2) |> 
  na.omit() |> 
  group_by(sitio,temporada) |> 
  summarise(m1 = coeficientes(PC1,PC2,potencial)$m1,
            m2 = coeficientes(PC1,PC2,potencial)$m2,
            int = coeficientes(PC1,PC2,potencial)$int,
            r = coeficientes(PC1,PC2,potencial)$r) |> 
  ungroup()

data_val_mod <- data_validacion |>
  select(sitio:tratamiento,potencial,PC1,PC2) |> 
  na.omit() |> 
  left_join(data_coef,by=c('sitio','temporada')) |> 
  mutate(potencial_modelado = PC1*m1+PC2*m2+int) |> 
  select(sitio:potencial,potencial_modelado)

escala <- c('temporada','sitio','tratamiento')

data_metrica <- list()
for (x in 1:length(escala)) {
  
  data_metrica[[x]] <- data_val_mod |> 
    select(sitio,temporada,tratamiento,potencial,potencial_modelado) |> 
    group_by(!!!syms(escala[1:min(x, 3)])) |> 
    summarise(r2 = cor(potencial,potencial_modelado, use = 'na.or.complete')^2,
              rmse = rmse(potencial,potencial_modelado),
              mae = mae(potencial,potencial_modelado)) |> 
    ungroup() |> 
    mutate(texto = paste("R2:", round(r2, 2), 
                         "\nRMSE:", round(rmse, 2), 
                         "\nMAE:", round(mae, 2)))
}
names(data_metrica) <- escala

data_metrica_dia <- list()
for (x in 1:length(escala)) {
  
  data_metrica_dia[[x]] <- data_val_mod |> 
    filter(tipo == 'dia') |> 
    select(sitio,temporada,tratamiento,potencial,potencial_modelado) |> 
    group_by(!!!syms(escala[1:min(x, 3)])) |> 
    summarise(r2 = cor(potencial,potencial_modelado, use = 'na.or.complete')^2,
              rmse = rmse(potencial,potencial_modelado),
              mae = mae(potencial,potencial_modelado)) |> 
    ungroup() |> 
    mutate(texto = paste("R2:", round(r2, 2), 
                         "\nRMSE:", round(rmse, 2), 
                         "\nMAE:", round(mae, 2)))
}
names(data_metrica_dia) <- escala

data_metrica_hora <- list()
for (x in 1:length(escala)) {
  
  data_metrica_hora[[x]] <- data_val_mod |> 
    filter(tipo == 'hora') |> 
    select(sitio,temporada,tratamiento,potencial,potencial_modelado) |> 
    group_by(!!!syms(escala[1:min(x, 3)])) |> 
    summarise(r2 = cor(potencial,potencial_modelado, use = 'na.or.complete')^2,
              rmse = rmse(potencial,potencial_modelado),
              mae = mae(potencial,potencial_modelado)) |> 
    ungroup() |> 
    mutate(texto = paste("R2:", round(r2, 2), 
                         "\nRMSE:", round(rmse, 2), 
                         "\nMAE:", round(mae, 2)))
}
names(data_metrica_hora) <- escala

data_total <- bind_rows(data_dia,data_hora) |>
  left_join(data_coef,by=c('sitio','temporada')) |> 
  mutate(potencial_modelado = PC1*m1+PC2*m2+int) |> 
  group_by(sitio,temporada,fecha,hora,tipo,tratamiento) |> 
  summarise(potencial = mean(potencial,na.rm=T),
            potencial_modelado = mean(potencial_modelado,na.rm=T)) |> 
  select(sitio:potencial,potencial_modelado)
```

## Serie de datos diarios

::: panel-tabset
# Temporada 2022-2023
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_total |>
  filter(tipo == 'dia') |> 
  mutate(fecha = as.Date(fecha)) |> 
  filter(temporada == '2022-2023') |>
  pivot_longer(cols = c('potencial','potencial_modelado'),
               names_to = 'turgor',values_to = 'valor') |>
  group_by(sitio,temporada,turgor) |> 
  mutate(valor = as.numeric(scale(valor))) |> 
  ggplot(aes(fecha,valor,color=turgor)) +
  geom_point(size = .5) +
  geom_line() +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names), scale = 'free') +
  scale_color_hue(labels = c('Potencial','Potencial modelado')) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b %Y") +
  labs(y = 'Presión (est)',
       x = 'Fecha',
       color = 'Potencial') +
  guides(color = guide_legend(override.aes = list(size = 3)))

```

# Temporada 2023-2024
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_total |>
  filter(tipo == 'dia') |> 
  mutate(fecha = as.Date(fecha)) |> 
  filter(temporada == '2023-2024') |>
  pivot_longer(cols = c('potencial','potencial_modelado'),
               names_to = 'turgor',values_to = 'valor') |>
  group_by(sitio,temporada,turgor) |> 
  mutate(valor = as.numeric(scale(valor))) |> 
  ggplot(aes(fecha,valor,color=turgor)) +
  geom_point(size = .5) +
  geom_line() +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names), scale = 'free') +
  scale_color_hue(labels = c('Potencial','Potencial modelado')) +
  scale_x_date(date_breaks = "2 month", date_labels = "%b %Y") +
  labs(y = 'Presión (est)',
       x = 'Fecha',
       color = 'Potencial') +
  guides(color = guide_legend(override.aes = list(size = 3)))

```
:::

## Serie de datos horarios

::: panel-tabset
# Temporada 2022-2023
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_total |>
  filter(tipo == 'hora') |> 
  mutate(fecha = as.Date(fecha),
  hora = as.numeric(substr(hora,1,2))) |> 
  filter(temporada == '2022-2023') |>
  pivot_longer(cols = c('potencial','potencial_modelado'),
               names_to = 'turgor',values_to = 'valor') |>
  group_by(sitio,temporada,fecha,turgor) |> 
  mutate(valor = as.numeric(scale(valor))) |> 
  ggplot(aes(hora,valor,color=turgor,group = turgor)) +
  geom_point(size = .5) +
  geom_line() +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names), scale = 'free') +
  scale_color_hue(labels = c('Potencial','Potencial modelado')) +
  labs(y = 'Presión (est)',
       x = 'Fecha',
       color = 'Potencial') +
  guides(color = guide_legend(override.aes = list(size = 3)))

```

# Temporada 2023-2024
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_total |>
  filter(tipo == 'hora') |> 
  mutate(fecha = as.Date(fecha),
  hora = as.numeric(substr(hora,1,2))) |> 
  filter(temporada == '2023-2024') |>
  pivot_longer(cols = c('potencial','potencial_modelado'),
               names_to = 'turgor',values_to = 'valor') |>
  group_by(sitio,temporada,fecha,turgor) |> 
  mutate(valor = as.numeric(scale(valor))) |> 
  ggplot(aes(hora,valor,color=turgor,group = turgor)) +
  geom_point(size = .5) +
  geom_line() +
  facet_grid(tratamiento~sitio, labeller = as_labeller(names), scale = 'free') +
  scale_color_hue(labels = c('Potencial','Potencial modelado')) +
  labs(y = 'Presión (est)',
       x = 'Fecha',
       color = 'Potencial') +
  guides(color = guide_legend(override.aes = list(size = 3)))

```
:::

## Validación general

::: panel-tabset

# Tratamiento
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica$tratamiento,by=c('temporada','sitio','tratamiento')) |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio+tratamiento,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.95, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, size = 3) +
  theme_light()
```

# Sitio
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica$sitio,by=c('temporada','sitio')) |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```

# Temporada
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica$temporada,by=c('temporada')) |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_wrap(~temporada,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```
:::

## Validación solo con datos diarios

::: panel-tabset

# Tratamiento
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_dia$tratamiento,by=c('temporada','sitio','tratamiento')) |> 
  filter(tipo == 'dia') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio+tratamiento,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.95, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, size = 3) +
  theme_light()
```

# Sitio
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_dia$sitio,by=c('temporada','sitio')) |> 
  filter(tipo == 'dia') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```

# Temporada
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_dia$temporada,by=c('temporada')) |>
  filter(tipo == 'dia') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_wrap(~temporada,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```
:::

## Validación solo con datos horarios

::: panel-tabset

# Tratamiento
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_hora$tratamiento,by=c('temporada','sitio','tratamiento')) |> 
  filter(tipo == 'hora') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio+tratamiento,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.95, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, size = 3) +
  theme_light()
```

# Sitio
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_hora$sitio,by=c('temporada','sitio')) |> 
  filter(tipo == 'hora') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_grid(temporada~sitio,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```

# Temporada
```{r}
#| fig-width: 12
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_val_mod |> 
  left_join(data_metrica_hora$temporada,by=c('temporada')) |> 
  filter(tipo == 'hora') |> 
  ggplot(aes(potencial,potencial_modelado)) +
  geom_point() +
  facet_wrap(~temporada,labeller = as_labeller(names)) +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  geom_text(aes(label = texto), 
            x = max(data_val_mod$potencial)*.99, 
            y = min(data_val_mod$potencial_modelado)*1.1, 
            hjust = 1, vjust = 0,size = 5) +
  theme_light()
```
:::

