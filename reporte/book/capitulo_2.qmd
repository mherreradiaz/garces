# Capítulo 2: Preprocesamiento de datos de turgor

```{r}
source('C:/Hemera/garces/reporte/book/paquetes.R')
```

Como se mencionó en la sección @sec-turgor, para el preprocesamiento de los datos se llevó a cabo una limpieza basada en clustering y la correlación con la temperatura y VPD. Esto permitió diferenciar periodos que se alejaban del comportamiento normal del turgor (i.e. puntos máximos a la hora de más demanda hídrica del día y disminución en las horas de la noche). A continuación se presenta el diagrama de flujo del preprocesamiento de los datos de turgor.

```{mermaid}
flowchart TD
  A["Datos brutos de turgor\n (sensor)"] --> B(Clustering)
  B --> C["Datos clusterizados\n (sensor)"]
  D[Temperatura y VPD] --> E("Limpieza de datos:\n eliminación de clusters")
  C --> E
  E --> F["Datos clusterizados limpios\n (sensor)"]
  F --> G(Estandarización de clusters)
  G --> H["Datos preprocesados (sensor)"]
  H --> I["Datos preprocesados (unidad)"]
  H --> J["Datos preprocesados (tratamiento)"]

```

### Datos preprocesados

Para el preprocesamiento de los datos se llevó a cabo una limpieza de cluster para cada sensor, permitiendo diferenciar entre periodos en donde existía un ruido en las series temporales y eliminando aquellas que se alejaban del comportamiento normal del turgor. Este preprocesamiento se encuentra detallado y descrito en el siguiente [enlace](https://mherreradiaz.github.io/garces/reporte/analisis_turgor.html){target="_blank"}.

#### A nivel de sensor

::: panel-tabset
# Serie temporal 2022-2023

```{r}
#| fig-width: 13 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor <- read_rds('C:/Hemera/garces/analisis/03_data_turgor_sensor_prepro.rds')

turgor_info <- data_turgor |>   
  select(sitio,temporada,tratamiento,unidad,codigo) |>   
  distinct() |>   
  arrange(temporada,sitio,tratamiento,unidad)  

data_turgor |>   filter(temporada == '2022-2023') |>   
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),                                   format = "%Y-%m-%d %H:%M")) |>   
  ggplot(aes(fecha_hora,turgor_sc,color=zim)) +   geom_point(size = .1) +   
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",                
                   limits = as.POSIXct(c("2022-10-01", "2023-04-3"))) +   facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +   
  labs(x = "Meses", y = "Presión de parche (estand.)",        
       color = 'Zim') +   
  theme_light() +   
  theme(text = element_text(size = 13),         
        axis.title.y = element_text(margin = margin(r = 17)),         
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal 2023-2024

```{r}
#| fig-width: 13 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>   
  filter(temporada == '2023-2024') |>   
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),                                   format = "%Y-%m-%d %H:%M")) |>   
  ggplot(aes(fecha_hora,turgor_sc,color=zim)) +   
  geom_point(size = .1) +   
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",                
                   limits = as.POSIXct(c("2023-10-01", "2024-04-3"))) +   
  facet_grid(tratamiento+unidad~sitio, labeller = as_labeller(names)) +   
  labs(x = "Meses", y = "Presión de parche (estand.)",        
       color = 'Zim') +   
  theme_light() +   
  theme(text = element_text(size = 13),         
        axis.title.y = element_text(margin = margin(r = 17)),         
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Ciclo diario 2022-2023

```{r}
#| fig-width: 10 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>    
  filter(temporada == '2022-2023') |>   
  group_by(sitio,tratamiento,unidad,hora) |>    
  summarize(turgor_hora = mean(turgor_sc,na.rm = TRUE)) |>    
  ggplot(aes(hora,turgor_hora,color=unidad)) +   
  geom_point(size=.05) +   
  geom_line() +   
  labs(x = 'Hora',        
       y = 'Presión de parche (estand.)') +   
  facet_grid(tratamiento+unidad~sitio,scales = 'free_y', 
             labeller = as_labeller(names)) +   
  theme_light() +   
  theme(text = element_text(size = 13),         
        axis.title.y = element_text(margin = margin(r = 17)),         
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Ciclo diario 2023-2024

```{r}
#| fig-width: 10 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>
  filter(temporada == '2023-2024') |>
  group_by(sitio,tratamiento,unidad,hora) |>
  summarize(turgor_hora = mean(turgor_sc,na.rm = TRUE)) |>    
  ggplot(aes(hora,turgor_hora,color=unidad)) +   
  geom_point(size=.05) +   
  geom_line() +   
  labs(x = 'Hora',
       y = 'Presión de parche (estand.)') +   
  facet_grid(tratamiento+unidad~sitio,scales = 'free_y', 
             labeller = as_labeller(names)) +   
  theme_light() +   
  theme(text = element_text(size = 13),         
        axis.title.y = element_text(margin = margin(r = 17)),         
        axis.title.x = element_text(margin = margin(t = 17)))

```

\# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio y tratamiento.

```{r}
data_turgor |>   
  group_by(temporada,sitio,tratamiento,unidad,zim) |>   
  summarise(n = sum(!is.na(turgor))) |>
  mutate(unidad = as.character(unidad),
         unidad = ifelse(zim != 'Z1','',unidad),
         tratamiento = ifelse(unidad != 1,"",tratamiento),
         sitio= ifelse(tratamiento != 'T1',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,          
         Tratamiento = tratamiento,
         Unidad = unidad) |>
  knitr::kable()
```
:::

#### A nivel de unidad

```{r}
data_turgor <- read_rds('C:/Hemera/garces/analisis/04_data_turgor_unidad_prepro.rds')
turgor_info <- data_turgor |>
  select(sitio,temporada,tratamiento,unidad) |>
  distinct() |>
  arrange(temporada,sitio,tratamiento,unidad)
```

::: panel-tabset
# Serie temporal 2022-2023

La Esperanza

```{r}
#| fig-width: 13
#| fig-height: 7
#| fig-align: center
#| lightbox: true

data_turgor |>
  filter(temporada == '2022-2023',
         sitio == 'la_esperanza') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor_sc,color=tratamiento)) +
  geom_line(linewidth = .2) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
                   limits = as.POSIXct(c("2022-10-01", "2023-04-3"))) +
  facet_grid(tratamiento~unidad, labeller = as_labeller(names)) +
  labs(x = "Meses", y = "Presión de parche (estand.)") +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

Rio Claro

```{r}
#| fig-width: 13 #| fig-height: 10 #| fig-align: center #| lightbox: true  data_turgor |>   filter(temporada == '2022-2023',          sitio == 'rio_claro') |>   mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),                                   format = "%Y-%m-%d %H:%M")) |>   ggplot(aes(fecha_hora,turgor_sc,color=tratamiento)) +   geom_point(size = .1) +   scale_x_datetime(date_breaks = "2 month", date_labels = "%b",                limits = as.POSIXct(c("2022-10-01", "2023-04-3"))) +   facet_grid(unidad~tratamiento, labeller = as_labeller(names)) +   labs(x = "Meses", y = "Presión de parche (estand.)") +   theme_light() +   theme(legend.position = "none",         text = element_text(size = 13),         axis.title.y = element_text(margin = margin(r = 17)),         axis.title.x = element_text(margin = margin(t = 17)))
```

# Serie temporal 2023-2024

La Esperanza

```{r}
#| fig-width: 13 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>   filter(temporada == '2023-2024',          sitio == 'la_esperanza') |>   mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),                                   format = "%Y-%m-%d %H:%M")) |>   ggplot(aes(fecha_hora,turgor_sc,color=tratamiento)) +   geom_point(size = .1) +   scale_x_datetime(date_breaks = "2 month", date_labels = "%b",                limits = as.POSIXct(c("2023-10-01", "2024-04-3"))) +   facet_grid(unidad~tratamiento, labeller = as_labeller(names)) +   labs(x = "Meses", y = "Presión de parche (estand.)") +   theme_light() +   theme(legend.position = "none",         text = element_text(size = 13),         axis.title.y = element_text(margin = margin(r = 17)),         axis.title.x = element_text(margin = margin(t = 17)))
```

Rio Claro

```{r}
#| fig-width: 13 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>
  filter(temporada == '2023-2024',
         sitio == 'rio_claro') |>
  mutate(fecha_hora = as.POSIXct(paste0(fecha,' ',hora,':00'),
                                 format = "%Y-%m-%d %H:%M")) |>
  ggplot(aes(fecha_hora,turgor_sc,color=tratamiento)) +
  geom_point(size = .1) +
  scale_x_datetime(date_breaks = "2 month", date_labels = "%b",
                   limits = as.POSIXct(c("2023-10-01", "2024-04-3"))) +
  facet_grid(unidad~tratamiento, labeller = as_labeller(names)) +
  labs(x = "Meses", y = "Presión de parche (estand.)") +
  theme_light() +
  theme(legend.position = "none",
        text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Ciclo diario 2022-2023

```{r}
#| fig-width: 10 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>
  filter(temporada == '2022-2023') |>
  group_by(sitio,tratamiento,unidad,hora) |>
  summarize(turgor_hora = mean(turgor_sc,na.rm = TRUE)) |>
  ggplot(aes(hora,turgor_hora,color=unidad)) +
  geom_point(size=.05) +
  geom_line() +
  labs(x = 'Hora',
       y = 'Presión de parche (estand.)') +
  facet_grid(tratamiento+unidad~sitio,scales = 'free_y',
             labeller = as_labeller(names)) +   theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Ciclo diario 2023-2024

```{r}
#| fig-width: 10 
#| fig-height: 10 
#| fig-align: center 
#| lightbox: true  

data_turgor |>
  filter(temporada == '2023-2024') |>
  group_by(sitio,tratamiento,unidad,hora) |>
  summarize(turgor_hora = mean(turgor_sc,na.rm = TRUE)) |>
  ggplot(aes(hora,turgor_hora,color=unidad)) +
  geom_point(size=.05) +
  geom_line() +
  labs(x = 'Hora',
       y = 'Presión de parche (estand.)') +
  facet_grid(tratamiento+unidad~sitio,scales = 'free_y',
             labeller = as_labeller(names)) +
  theme_light() +
  theme(text = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 17)),
        axis.title.x = element_text(margin = margin(t = 17)))
```

# Población de datos

La siguiente tabla presenta la población de datos según temporada, sitio y tratamiento.

```{r}
data_turgor |>
  group_by(temporada,sitio,tratamiento) |>
  summarise(n = sum(!is.na(turgor_sc))) |>
  mutate(sitio= ifelse(tratamiento != 'T1',"",sitio),
         temporada = ifelse(sitio != 'la_esperanza',"",temporada),
         sitio = str_to_title(str_replace_all(sitio, "_", " "))) |>
  rename(Temporada = temporada,
         Sitio = sitio,
         Tratamiento = tratamiento) |>
  knitr::kable()
```
:::
